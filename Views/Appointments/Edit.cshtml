@model Hospital_Managment_System.Models.Appointment

@{
    ViewData["Title"] = "Edit Appointment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container py-5">
    <h1 class="text-center text-primary mb-5">@ViewData["Title"]</h1>

    <div class="row justify-content-center">
        <div class="col-lg-8">
            <form asp-action="Edit" method="post" class="p-5 border rounded shadow-lg bg-white">
                <input type="hidden" asp-for="Id" />
                <div asp-validation-summary="ModelOnly" class="text-danger mb-4"></div>

                <!-- Patient's Full Name (Visible to Doctor) -->
                @if (User.IsInRole("Doctor"))
                {
                    <div class="form-group mb-5">
                        <label class="form-label font-weight-bold">Patient's Full Name</label>
                        <div class="p-3 border rounded bg-light text-dark">
                            <span>@Model.Patient.FirstName @Model.Patient.LastName</span>
                        </div>
                    </div>
                }

                <!-- Doctor's Names (Visible to Patient) -->
                @if (User.IsInRole("Patient"))
                {
                    <div class="form-group mb-5">
                        <label class="form-label font-weight-bold">Assigned Doctors</label>
                        <div class="p-3 border rounded bg-light text-dark">
                            @foreach (var doctor in ViewBag.DoctorFullName)
                            {
                                <p>@doctor</p>
                            }
                        </div>
                    </div>
                }

                <!-- Appointment Date (Visible to both Doctor and Patient) -->
                <div class="form-group mb-5">
                    <label asp-for="AppointmentDate" class="form-label font-weight-bold">Appointment Date</label>
                    <div class="input-group input-group-lg">
                        <input asp-for="AppointmentDate" class="form-control rounded" type="datetime-local" />
                        <span class="input-group-text bg-primary text-white">
                            <i class="bi bi-calendar2-event-fill"></i>
                        </span>
                    </div>
                    <span asp-validation-for="AppointmentDate" class="text-danger"></span>
                </div>

                <!-- Appointment Status for Doctor -->
                @if (User.IsInRole("Doctor"))
                {
                    <div class="form-group mb-5">
                        <label asp-for="AppointmentStatus" class="form-label font-weight-bold">Appointment Status</label>
                        <select asp-for="AppointmentStatus" class="form-control rounded" asp-items='@(ViewData["AppointmentStatus"] as SelectList)'></select>
                        <span asp-validation-for="AppointmentStatus" class="text-danger"></span>
                    </div>
                }

                <!-- Feedback Status (Visible to Patient) -->
                @if (User.IsInRole("Patient"))
                {
                    <div class="form-group mb-5">
                        <label class="form-label font-weight-bold">Feedback Status</label>
                        <div class="p-3 border rounded bg-light text-dark">
                            <span>@(Model.FeedbackStatus == Hospital_Managment_System.Enums.FeedbackStatus.Given ? "Given" : "Pending")</span>
                        </div>
                    </div>
                }

                <!-- Feedback Box (Visible to Patient, Optional) -->
                @if (User.IsInRole("Patient"))
                {
                    <div class="form-group mb-5">
                        <label class="form-label font-weight-bold">Your Feedback (Optional)</label>
                        <textarea name="feedbackInput" class="form-control" rows="5" placeholder="Leave your feedback (optional)">@Model.Feedback</textarea>
                    </div>
                }

                <!-- Assigned Doctors for Doctor -->
                @if (User.IsInRole("Doctor"))
                {
                    <div class="form-group mb-5">
                        <h5 class="font-weight-bold">Assigned Doctors</h5>
                        <ul class="list-group" id="assigned-doctors-list">
                            @if (ViewBag.AssignedDoctors != null)
                            {
                                @foreach (var doctor in ViewBag.AssignedDoctors)
                                {
                                    <li class="list-group-item d-flex justify-content-between align-items-center assigned-doctor" data-doctor-id="@doctor.Id">
                                        @doctor.FirstName @doctor.LastName
                                        <button type="button" class="btn btn-danger btn-sm remove-doctor" data-doctor-id="@doctor.Id">Remove</button>
                                    </li>
                                }
                            }
                        </ul>
                    </div>

                    <!-- Add Doctors to Appointment -->
                    <div class="form-group mb-5">
                        <h5 class="font-weight-bold">Add Doctors to Appointment</h5>
                        <select id="doctor-selection" class="form-control">
                            <option value="">-- Select Doctor --</option>
                            @foreach (var doctor in ViewBag.UnassignedDoctors)
                            {
                                <option value="@doctor.Id">@doctor.FirstName @doctor.LastName</option>
                            }
                        </select>
                        <button type="button" id="add-doctor-btn" class="btn btn-success mt-3">Add Doctor</button>
                    </div>

                    <!-- Hidden input to submit selected doctors -->
                    <input type="hidden" id="DoctorIds" name="DoctorIds" />

                    <!-- Button to order lab tests (visible only to doctors) -->
                    <div class="form-group mb-5">
                        <h5 class="font-weight-bold">Order Lab Tests</h5>
                        <a href="@Url.Action("OrderLabTests", "LabTests", new { appointmentId = Model.Id })" class="btn btn-primary">
                            Order Lab Tests
                        </a>
                    </div>
                }

                <!-- Save Button (Visible to both Patient and Doctor) -->
                <div class="text-center mb-5">
                    <input type="submit" value="Save" class="btn btn-primary btn-lg px-5 py-2" />
                </div>

                <!-- Back Button -->
                <div class="text-center">
                    <a href="@Url.Action("Index", "Appointments")" class="btn btn-secondary btn-lg px-5 py-2">Back to Appointments</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Add doctor to the assigned doctors list
            $('#add-doctor-btn').on('click', function () {
                var selectedDoctorId = $('#doctor-selection').val();
                var selectedDoctorName = $('#doctor-selection option:selected').text();

                if (selectedDoctorId && !$('#assigned-doctors-list [data-doctor-id="' + selectedDoctorId + '"]').length) {
                    $('#assigned-doctors-list').append(`
                                        <li class="list-group-item d-flex justify-content-between align-items-center assigned-doctor" data-doctor-id="${selectedDoctorId}">
                                            ${selectedDoctorName}
                                            <button type="button" class="btn btn-danger btn-sm remove-doctor" data-doctor-id="${selectedDoctorId}">Remove</button>
                                        </li>
                                    `);

                    // Remove the selected doctor from the unassigned doctors dropdown
                    $("#doctor-selection option[value='" + selectedDoctorId + "']").remove();

                    // Update hidden input with the selected doctors
                    updateDoctorIds();
                }
            });

            // Remove a doctor from the assigned doctors list
            $(document).on('click', '.remove-doctor', function () {
                var doctorId = $(this).data('doctor-id');
                var doctorName = $(this).closest('li').text().trim().replace('Remove', '');

                // Re-add the doctor to the unassigned doctors dropdown
                $('#doctor-selection').append(`<option value="${doctorId}">${doctorName}</option>`);

                $(this).closest('li').remove();

                // Update hidden input with the selected doctors
                updateDoctorIds();
            });

            // Update the hidden DoctorIds input with selected doctors
            function updateDoctorIds() {
                var doctorIds = [];
                $('#assigned-doctors-list .assigned-doctor').each(function () {
                    doctorIds.push($(this).data('doctor-id'));
                });
                $('#DoctorIds').val(doctorIds.join(','));
            }

            // Initially update DoctorIds when the page loads
            updateDoctorIds();
        });
    </script>
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
